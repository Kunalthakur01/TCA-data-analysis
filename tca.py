# -*- coding: utf-8 -*-
"""TCA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15oq63GBL_YkVaPvTF5HfxlBB02Nurixq
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

df= pd.read_csv("/content/Customer Churn.csv")

df.head()

"""replacing blacks wiht 0 as tenure is 0 and no total charges are recorded"""

df["TotalCharges"]= df["TotalCharges"].replace(" ","0")
df["TotalCharges"]= df["TotalCharges"].astype("float")

df.info()

df.isnull().sum().sum()

df.describe()

df["customerID"].duplicated().sum()

"""converted 0 and 1 values of senior citixen to yes/no to make it easy to understand

"""

def cov(value):
  if value ==1:
    return "yes"
  else:
    return "no"

df["SeniorCitizen"] = df["SeniorCitizen"].apply(cov)

df.tail()

ax= sns.countplot(x="Churn", data = df)
ax.bar_label(ax.containers[0])
plt.title("Count of Customer by Churn")
plt.show()

plt.figure(figsize=(3,4))
gb = df.groupby("Churn").agg({"Churn":"count"})

plt.pie(gb["Churn"], labels= gb.index ,autopct="%1.2f%%")
plt.title("Percentage of Churned Customeres")
plt.show()

"""The churn is  not gender specify"""

plt.figure(figsize=(3,3))
sns.countplot(x="gender", data = df, hue = "Churn" )
plt.title("Churn by Gender")
plt.show()

plt.figure(figsize=(3,3))
ax=sns.countplot(x="SeniorCitizen", data = df )
ax.bar_label(ax.containers[0])
plt.title("Churn by SeniorCitizen")
plt.show()

"""this code is take form the chatgpt to show the better percentage in chart"""

# Step 1: Count how many Churn = Yes/No in each SeniorCitizen group
counts = pd.crosstab(df['SeniorCitizen'], df['Churn'])

# Step 2: Convert counts to percentages
percentages = counts.div(counts.sum(axis=1), axis=0) * 100

# Step 3: Plot stacked bar chart
ax = percentages.plot(kind='bar', stacked=True, figsize=(4,4))

# Step 4: Add % labels inside bars
for i in range(len(percentages)):
    y_offset = 0
    for value in percentages.iloc[i]:
        plt.text(i, y_offset + value/2, f"{value:.1f}%", ha='center', va='center', color='white')
        y_offset += value

# Step 5: Labels and title
plt.title("Churn by SeniorCitizen (%)")
plt.ylabel("Percentage")
plt.xlabel("SeniorCitizen")
plt.legend(title="Churn", bbox_to_anchor= (0.9,0.9))
plt.ylim(0, 100)

plt.show()

"""Comparative a greater percentage of people in senior citizen category have churned"""

plt.figure(figsize=(6,4))
sns.histplot(x="tenure", data = df , bins=75, hue='Churn')

plt.show()

"""people who have used our servies for a long time have stayed and people who have used our servies #1 or #2 months have churned"""

plt.figure(figsize=(4,3))
ax=sns.countplot(x="Contract", data = df, hue = "Churn" )
ax.bar_label(ax.containers[0])
plt.title("Count of Customers by Contract")
plt.show()

"""People who have month to month contract are likely to churn then from those who have 1 to 2 year of contract"""

df.columns.values

cols = [
    'PhoneService', 'MultipleLines', 'InternetService',
    'OnlineSecurity', 'OnlineBackup', 'DeviceProtection',
    'TechSupport', 'StreamingTV', 'StreamingMovies'
]

# Create subplots (3 rows Ã— 3 columns for 9 plots)
fig, axes = plt.subplots(nrows=3, ncols=3, figsize=(15, 12))
axes = axes.flatten()  # Flatten so we can index easily

for i, col in enumerate(cols):
    sns.countplot(x=col,data=df, ax=axes[i], hue=df['Churn'])
    #sns.countplot(x=df[col], ax=axes[i], palette="pastel")
    axes[i].set_title(col)
    axes[i].set_xlabel('')
    axes[i].set_ylabel('Count')

plt.tight_layout()
plt.show()

"""The subplots show churn distribution across various customer service features. Customers without extra services like OnlineSecurity, TechSupport, or DeviceProtection tend to churn more, while those with Fiber optic internet have higher churn than DSL users. Overall, lack of bundled services seems correlated with increased churn rates.

"""

plt.figure(figsize=(8,3))
ax=sns.countplot(x="PaymentMethod", data = df, hue = "Churn" )

ax.bar_label(ax.containers[0])
ax.bar_label(ax.containers[1])
plt.title("Count of Customers by PaymentMethod")
plt.xticks(rotation =5)
plt.show()

"""customer is likely to churn when he is using electronic check as a payment method"""

